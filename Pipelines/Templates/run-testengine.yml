parameters:
  - name: solutionName
    type: string
  - name: environmentId
    type: string
  - name: tenantId
    type: string
  - name: testAccountUsername
    type: string
  - name: testAccountPassword
    type: string

steps:
- pwsh: |
    git clone --recurse-submodules https://github.com/Grant-Archibald-MS/PowerApps-TestEngine-Modules.git
    
    cd PowerApps-TestEngine-Modules\PowerApps-TestEngine
    git checkout testengine-plugin
    cd ..

    cd src\PowerApps-TestEngine-Modules
    dotnet build
  displayName: "Build Test Engine"

- pwsh: |
    $env:user1Email = "${{parameters.testAccountUsername}}"
    $env:user1Password = "${{parameters.testAccountUsername}}"
    cd PowerApps-TestEngine-Modules\PowerApps-TestEngine\bin\Debug\PowerAppsTestEngine

    $testPath = "$(Build.SourcesDirectory)\$(Build.Repository.Name)\$(solutionName)\tests"

    Write-Host "Searching for tests in"
    Write-Host $testPath
    if (Test-Path -Path $testPath -PathType Container) {
      Write-Host "Found test directory"
      $testFiles = @(Get-ChildItem -Path $testPath -Filter *.fx.yaml -Recurse -ErrorAction SilentlyContinue -Force)
      if ($testFiles.length -eq 0) {
        Write-Host "No test files found"
      } else {
        ForEach ($testFile in $testFiles) {
          Write-Host $testFile.FullName
          dotnet run -- -i $testFile.FullName -e $(environmentId) -t $(tenantId)
        }
      }
    } else {
      Write-Host "No tests found"
    }
  displayName: "Run Test Engine Tests"
    
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
  displayName: "Publish Test Results"